<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="real">

  <title>REAL Data Type</title>
  <titlealts audience="PDF"><navtitle>REAL</navtitle></titlealts>
  <prolog>
    <metadata>
      <data name="Category" value="Impala"/>
      <data name="Category" value="Impala Data Types"/>
      <data name="Category" value="SQL"/>
      <data name="Category" value="Data Analysts"/>
      <data name="Category" value="Developers"/>
      <data name="Category" value="Schemas"/>
    </metadata>
  </prolog>

  <conbody>

    <p>
      An alias for the <codeph>DOUBLE</codeph> data type. See <xref href="impala_double.xml#double"/> for details.
    </p>

    <p conref="../shared/impala_common.xml#common/example_blurb"/>

    <p>
      These examples show how you can use the type names <codeph>REAL</codeph> and <codeph>DOUBLE</codeph>
      interchangeably, and behind the scenes Impala treats them always as <codeph>DOUBLE</codeph>.
    </p>

<codeblock>[localhost:21000] &gt; create table r1 (x real);
[localhost:21000] &gt; describe r1;
+------+--------+---------+
| name | type   | comment |
+------+--------+---------+
| x    | double |         |
+------+--------+---------+
[localhost:21000] &gt; insert into r1 values (1.5), (cast (2.2 as double));
[localhost:21000] &gt; select cast (1e6 as real);
+---------------------------+
| cast(1000000.0 as double) |
+---------------------------+
| 1000000                   |
+---------------------------+</codeblock>
  </conbody>
</concept>
